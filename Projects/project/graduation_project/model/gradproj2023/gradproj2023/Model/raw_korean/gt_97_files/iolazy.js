function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}var _createClass=function(){function n(t,e){for(var r=0;r<e.length;r++){var n=e[r];n.enumerable=n.enumerable||!1,n.configurable=!0,"value"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(t,e,r){return e&&n(t.prototype,e),r&&n(t,r),t}}();"IntersectionObserver"in window&&"IntersectionObserverEntry"in window&&"intersectionRatio"in window.IntersectionObserverEntry.prototype&&!("isIntersecting"in IntersectionObserverEntry.prototype)&&Object.defineProperty(window.IntersectionObserverEntry.prototype,"isIntersecting",{get:function(){return 0<this.intersectionRatio}}),window.NodeList&&!NodeList.prototype.forEach&&(NodeList.prototype.forEach=function(t,e){e=e||window;for(var r=0;r<this.length;r++)t.call(e,this[r],r,this)});var IOlazy=function(){function r(){var t=0<arguments.length&&void 0!==arguments[0]?arguments[0]:{},e=t.image,e=void 0===e?".lazyload":e,t=t.threshold,t=void 0===t?.006:t;_classCallCheck(this,r),this.threshold=t,this.image=document.querySelectorAll(e),this.observer=new IntersectionObserver(this.handleChange.bind(this),{threshold:[this.threshold]}),this.lazyLoad()}return _createClass(r,[{key:"handleChange",value:function(t){var e=this;t.forEach(function(t){t.isIntersecting&&(t.target.classList.add("visible"),t.target.getAttribute("data-srcset")&&(t.target.srcset=t.target.getAttribute("data-srcset")),t.target.getAttribute("data-src")&&(t.target.src=t.target.getAttribute("data-src")),e.observer.unobserve(t.target))})}},{key:"lazyLoad",value:function(){var e=this;this.image.forEach(function(t){e.observer.observe(t)})}}]),r}();