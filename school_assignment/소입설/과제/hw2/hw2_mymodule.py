# -*- coding: euc-kr -*-
# 소프트웨어입문설계 과제#2
# 이 모듈에 있는 각 함수들을 완성하는 것이 이번 과제의 목표입니다.
# 과제 설명서, 그리고 이 코드에 주석으로 달아 둔 TODO: 부분들을 참고하여 과제를 진행해 주세요.
#
# 주의할 점:
#   - 두 이름 mystat, dual은 절대 바꾸면 안 돼요!
#   - dual() 밖에 새로운 문장을 추가하면 안 돼요!
#   - global문을 사용하면 안 돼요!
#   - import문을 사용하면 안 돼요!
#   - 이 코드를 고친 다음에는 꼭 Ctrl + S를 눌러 저장해 주세요.
#   - 실행해 보려면 hw2_tester.py에 가서 F5를 눌러야 해요!



# 이 모듈의 개발자인 여러분이 정하는 '내 캐릭터'의 능력치입니다.
# 각 칸의 의미 및 규칙에 대해서는 과제 설명서의 '대결 규칙' 문단을 참고해 주세요.
#
# TODO:
# 아래 list의 각 칸에 들어갈 값을 규칙을 준수하는 선에서 자유롭게 적어 주세요.
mystat = ['Untitled', 0, 100, 0, 0, 0, 0 ]



# 이 함수는 인수로 받은 두 능력치의 우열을 가리는 함수입니다.
# 0등상을 위한 '평가 기준'을 여기서 세운다고 생각해도 좋을 듯 하며,
# 이번 과제는 사실상 이 함수를 여러분 입맛에 맞게 만드는 것이 주 목표입니다!
#
# TODO:
# 여러분의 캐릭터가 가장 우월한 캐릭터로 인정받을 수 있도록,
# 아래 규칙에 맞게 값을 return하도록 함수 내용물을 구성해 주세요:
#     left가 더 우월한 경우 0보다 작은 int 형식 값(예: -1)을 return해야 합니다.
#     right가 더 우월한 경우 0보다 큰 int 형식 값(예: 1)을 return해야 합니다.
#
# 이번 과제의 모든 캐릭터는 이름-능력치 조합이 모두 다르므로 '무승부'는 생각하지 않아도 됩니다.
# 거꾸로 말하면, 두 캐릭터의 능력치가 똑같다면 이름 값을 써서라도 우열을 가려야만 합니다.
# -> 단, 능력치가 다를 때는 이름에 대한 고려 없이 능력치만 가지고 우열을 가려야 해요.
#
# 여러분의 캐릭터는 left 자리에 있을 수도, right 자리에 있을 수도 있습니다.
# 테스트 실행 결과를 참고하면서 '누가 와도 무조건 내 캐릭터가 0등을 할 수 있도록'
# 꼼꼼하되 매우 편파적인 평가 기준을 세워 주세요!
#
def dual(left, right):
    # 아직 이 함수는 위에 적어 둔 목표대로 동작하지 않으므로
    # 지금 실행하면 오류 나는 게 정상이에요!
    # 과제를 시작했으면 이 pass문은 지워도 괜찮아요.
    pass
